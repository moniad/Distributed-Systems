//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.3
//
// <auto-generated>
//
// Generated from file `smarthome.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package SmartHome;

public class Device extends com.zeroc.Ice.Value
{
    public Device()
    {
        this.type = DeviceType.DRINKMACHINE;
        this.serialNumber = "";
        this.name = "";
        this.minValue = 0;
        this.devicePowerState = DevicePowerState.ON;
    }

    public Device(DeviceType type, String serialNumber, String name, short minValue, DevicePowerState devicePowerState)
    {
        this.type = type;
        this.serialNumber = serialNumber;
        this.name = name;
        this.minValue = minValue;
        this.devicePowerState = devicePowerState;
    }

    public DeviceType type;

    public String serialNumber;

    public String name;

    public short minValue;

    public DevicePowerState devicePowerState;

    public Device clone()
    {
        return (Device)super.clone();
    }

    public static String ice_staticId()
    {
        return "::SmartHome::Device";
    }

    @Override
    public String ice_id()
    {
        return ice_staticId();
    }

    /** @hidden */
    public static final long serialVersionUID = 3866239389164447509L;

    /** @hidden */
    @Override
    protected void _iceWriteImpl(com.zeroc.Ice.OutputStream ostr_)
    {
        ostr_.startSlice(ice_staticId(), -1, true);
        DeviceType.ice_write(ostr_, type);
        ostr_.writeString(serialNumber);
        ostr_.writeString(name);
        ostr_.writeShort(minValue);
        DevicePowerState.ice_write(ostr_, devicePowerState);
        ostr_.endSlice();
    }

    /** @hidden */
    @Override
    protected void _iceReadImpl(com.zeroc.Ice.InputStream istr_)
    {
        istr_.startSlice();
        type = DeviceType.ice_read(istr_);
        serialNumber = istr_.readString();
        name = istr_.readString();
        minValue = istr_.readShort();
        devicePowerState = DevicePowerState.ice_read(istr_);
        istr_.endSlice();
    }
}

//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.3
//
// <auto-generated>
//
// Generated from file `smarthome.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package SmartHome;

public class RoomController extends Device
{
    public RoomController()
    {
        super();
        this.roomId = RoomNameIdentifier.MUM;
        this.maxTemperature = 25;
    }

    public RoomController(DeviceType type, String serialNumber, String name, short minValue, DevicePowerState devicePowerState, RoomNameIdentifier roomId, short maxTemperature, short maxHumidity, short maxLightIntensity, short maxAromaticOil)
    {
        super(type, serialNumber, name, minValue, devicePowerState);
        this.roomId = roomId;
        this.maxTemperature = maxTemperature;
        this.maxHumidity = maxHumidity;
        this.maxLightIntensity = maxLightIntensity;
        this.maxAromaticOil = maxAromaticOil;
    }

    public RoomNameIdentifier roomId;

    public short maxTemperature;

    public short maxHumidity;

    public short maxLightIntensity;

    public short maxAromaticOil;

    public RoomController clone()
    {
        return (RoomController)super.clone();
    }

    public static String ice_staticId()
    {
        return "::SmartHome::RoomController";
    }

    @Override
    public String ice_id()
    {
        return ice_staticId();
    }

    /** @hidden */
    public static final long serialVersionUID = -6958646829301083169L;

    /** @hidden */
    @Override
    public void _iceWriteImpl(com.zeroc.Ice.OutputStream ostr_)
    {
        ostr_.startSlice(ice_staticId(), -1, false);
        RoomNameIdentifier.ice_write(ostr_, roomId);
        ostr_.writeShort(maxTemperature);
        ostr_.writeShort(maxHumidity);
        ostr_.writeShort(maxLightIntensity);
        ostr_.writeShort(maxAromaticOil);
        ostr_.endSlice();
        super._iceWriteImpl(ostr_);
    }

    /** @hidden */
    @Override
    public void _iceReadImpl(com.zeroc.Ice.InputStream istr_)
    {
        istr_.startSlice();
        roomId = RoomNameIdentifier.ice_read(istr_);
        maxTemperature = istr_.readShort();
        maxHumidity = istr_.readShort();
        maxLightIntensity = istr_.readShort();
        maxAromaticOil = istr_.readShort();
        istr_.endSlice();
        super._iceReadImpl(istr_);
    }
}
